{"version":3,"file":"ash-vm.js","sources":["../../lib/utils.js","../../lib/process.js","../../lib/commands.js","../../lib/vm.js","../../lib/audio/gibberish/index.js","../../lib/audio/waa/synth-kit.js","../../lib/audio/waa/index.js","../../lib/ext/random.js","../../lib/ext/debug.js","../../lib/ext/compatibility.js","../../lib/index.js"],"sourcesContent":["// # TimeVM utilities\n\n// copy values from one or more sources to a target\n// see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nexport const assign = Object.assign\n\n// test if an object is an array\nexport const isArray = Array.isArray\n\n// test if  is a string\nexport const isString = x => typeof x === 'string'\n\n// test if  is a function\nexport const isFn = x => typeof x === 'function'\n\n// test if  is defined\nexport const isDef = x => typeof x !== 'undefined'\n\n// get last element from an array\nexport const last = a => a[a.length - 1]\n// take the next element of stack without remove it\nexport const peek = last\n\n// A modulo operation that handles negative n more appropriately\n// e.g. wrap(-1, 3) returns 2\n// see http://en.wikipedia.org/wiki/Modulo_operation\n// see also http://jsperf.com/modulo-for-negative-numbers\nexport const wrap = (a, b) => (a % b + b) % b\n","// # Process\n\n// defer a function\nfunction defer (fn, data) {\n  setTimeout(() => { fn(data) }, 0)\n}\n\nconst isCommand = o => typeof o === \"string\" && o[0] === \"@\"\nconst isProgram = Array.isArray\nlet procId = 1\nconst ERR_INSTR_NOT_FOUND = \"Instruction not recognized.\"\nconst ERR_LIMIT_REACHED = \"Limit reached. Probably an infinity loop.\"\n\n// Processes are the principal computation unit. It departures from typical\n// processes in that it model the concept of time\nexport class Process {\n  constructor (program, context, time, rate) {\n    this.id = \"proc-\" + procId++\n    // a stack of values\n    this.stack = []\n    // the operations are stored in a stack (in reverse order)\n    this.operations = program ? [program] : []\n    // the context is used to store variables with scope\n    this.context = new Context(context)\n    // the current time\n    this.time = typeof time === \"number\" ? time : 0\n    // how fast time passes\n    this.rate = typeof rate === \"number\" ? rate : 1\n    // bind error to allow destructuring in commands\n    this.error = this.error.bind(this)\n  }\n\n  // wait an amount of time\n  wait (time) {\n    this.time += this.rate * time\n  }\n\n  // The process is agnostic about the commands to be use\n  step (commands) {\n    const { operations } = this\n    if (operations.length) {\n      const instr = operations.pop()\n      if (instr === null || instr === undefined) {\n        // ignore\n      } else if (typeof instr === \"function\") {\n        // it runs the functions but outside the loop\n        defer(instr, this.time)\n      } else if (isProgram(instr)) {\n        // if it\"s program, and since the operations are stored into an stack,\n        // we need add to the program operations in reverse order\n        for (let i = instr.length - 1; i >= 0; i--) {\n          operations.push(instr[i])\n        }\n      } else if (isCommand(instr)) {\n        const cmd = commands[instr]\n        if (typeof cmd === \"function\") cmd(this)\n        else this.error(\"step > \", ERR_INSTR_NOT_FOUND, instr)\n      } else {\n        // if it\"s a value, push it into the stack\n        this.stack.push(instr)\n      }\n    }\n  }\n\n  // the `resume` function run all the operations until time is reached\n  resume (commands, time = Infinity, limit = 10000) {\n    const { operations } = this\n    while (--limit > 0 && this.time < time && operations.length) {\n      this.step(commands)\n    }\n    if (limit === 0) throw Error(ERR_LIMIT_REACHED)\n    return operations.length > 0\n  }\n\n  // an utility function to write errors\n  error (instr, msg, obj) {\n    console.error(instr, msg, obj, \"id\", this.id, \"time\", this.time)\n  }\n}\n\n// ## Context\n\n// A context is a hierarchical structure to store values with scope\nexport class Context {\n  constructor (parent) {\n    if (parent instanceof Context) this.parent = parent\n    else if (parent) this.local = Object.assign({}, parent)\n  }\n\n  // Create a child\n  child (local) {\n    const c = new Context(this)\n    c.local = Object.assign({}, local)\n    return c\n  }\n  // get a value from a context\n  get (id) {\n    let target = this\n    while (target.value(id) === undefined && target.parent) {\n      target = target.parent\n    }\n    return target.value(id)\n  }\n\n  // set a value from a context\n  set (id, value) {\n    let target = this\n    while (target.value(id) === undefined && target.parent) {\n      target = target.parent\n    }\n    target.let(id, value)\n  }\n  // get a value from the local scope of a context\n  value (id) {\n    return this.local ? this.local[id] : undefined\n  }\n\n  // set a value into the local scope of a context\n  let (id, value) {\n    if (!this.local) this.local = {}\n    this.local[id] = value\n  }\n}\n","// # Commands\nimport { isArray, isString, last, wrap } from \"./utils\"\n\n// **Error messages**\nexport const ERR_EXPECT_PATTERN = \"Expected a pattern, but found:\"\nexport const ERR_EXPECT_STRING = \"Expected a string, but found:\"\n\n// **Utilities**\n\n// A generic stack operation that pops one value and pushes on result\nconst op1 = fn => ({ stack }) => {\n  stack.push(fn(stack.pop()))\n}\n\n// A generic stack operation that pops two values and pushes one result\nconst op2 = fn => ({ stack }) => {\n  stack.push(fn(stack.pop(), stack.pop()))\n}\n\n// A commands object is a map from instrunction name to functions\nexport default {\n  // ## Arithmetic\n  // | Name | Description | Example |\n  // |------|-------------|---------|\n  // | **@+**, **@add** | Add two values | `[1, 2, \"@+\"]` |\n  // | **@-**, **@sub** | Subtract two values | `[2, 1, \"@-\"]` |\n  // | **@\\***, **@mul** | Multiply two values | `[2, 4, \"@*\"]` |\n  // | **@/**, **@div** | Divide two values | `[4, 2, \"@*\"]` |\n  // | **@%**, **@wrap** | Modulo for positive and negative numbers | `[4, -2, \"@%\"]` |\n  // | **@mod* | Standard modulo operation | `[4, 2, \"@mod\"]` |\n  // | **@neg* | The negative of a value | `[4, \"@neg\"]` |\n  // [1, 2, \"@+\"]\n  \"@+\": op2((b, a) => a + b),\n  // [1, 2, \"@add\"]\n  \"@add\": \"@+\",\n  // [2, 1, \"@-\"]\n  \"@-\": op2((b, a) => a - b),\n  // [2, 1, \"@sub\"]\n  \"@sub\": \"@-\",\n  \"@*\": op2((b, a) => a * b),\n  \"@mul\": \"@*\",\n  \"@/\": op2((b, a) => b === 0 ? 0 : a / b),\n  \"@div\": \"@/\",\n  \"@%\": op2((b, a) => b === 0 ? 0 : wrap(a, b)),\n  \"@wrap\": \"@%\",\n  \"@mod\": op2((b, a) => b === 0 ? 0 : a % b),\n  \"@neg\": op1(a => -a),\n\n  // ## Logic\n  // **cond**: Conditional execution\n  // `[true, \"@cond\", [<success pattern>], [<fail pattern>]]`\n  \"@cond\": ({ stack, operations }) => {\n    const test = stack.pop()\n    // this is the pattern to execute if the test passes\n    const success = operations.pop()\n    // the next pattern is the \"else\" part\n    if (test) {\n      // remove the \"else\" part\n      operations.pop()\n      operations.push(success)\n    }\n  },\n  \"@>\": op2((b, a) => a > b),\n  \"@>=\": op2((b, a) => a >= b),\n  \"@<\": op2((b, a) => a < b),\n  \"@<=\": op2((b, a) => a <= b),\n  \"@==\": op2((b, a) => a === b),\n  \"@!=\": op2((b, a) => a !== b),\n  \"@!\": op1(a => !a),\n  \"@not\": \"@!\",\n  \"@&&\": op2((b, a) => a && b),\n  \"@and\": \"@&&\",\n  \"@||\": op2((b, a) => a || b),\n  \"@or\": \"@||\",\n\n  // ## Processes\n\n  // Operation related to interact with the current process\n\n  // | Name | Description | Example |\n  // |------|-------------|---------|\n  // | **@** | Alias of @execute | `10,\"dup\",\"@\"` |\n  // | **@let** | Assign a value to the local context | `10,\"repetitions\",\"@let\"` |\n  // | **@set** | Assign a value to the global context | `10,\"parts\",\"@set\"` |\n  // | **@get** | Push the value of a variable into the stack | `\"repetitions\",\"@get\"` |\n  // | **@wait** | Wait an amount of time | `1,\"@wait\"` |\n  // | **@sync** | Wait until next beat | `\"@sync\"` |\n  // | **@scale-rate** | Change the current rate by a factor | `1.5, \"@scale-rate\"` |\n\n  \"@let\": ({ stack, context }) => context.let(stack.pop(), stack.pop()),\n  \"@set\": ({ stack, context }) => context.set(stack.pop(), stack.pop()),\n  \"@get\": ({ stack, context }) => stack.push(context.get(stack.pop())),\n\n  \"@wait\": proc => proc.wait(Math.abs(Number(proc.stack.pop()))),\n  \"@sync\": proc => proc.wait(Math.floor(proc.time) + 1 - proc.time),\n\n  \"@scale-rate\": proc => {\n    const factor = parseFloat(proc.stack.pop(), 10)\n    if (factor > 0) proc.rate *= factor\n  },\n  \"@with-rate\": ({ stack, operations, error }) => {\n    const factor = parseFloat(stack.pop(), 10)\n    const pattern = operations.pop()\n    if (!isArray(pattern)) error(\"@with-rate\", ERR_EXPECT_PATTERN, pattern)\n    operations.push([\n      factor,\n      \"@scale-rate\",\n      pattern,\n      1 / factor,\n      \"@scale-rate\"\n    ])\n  },\n\n  // ## Execute and repeat\n\n  // | Name | Description | Example |\n  // |------|-------------|---------|\n  // | **@dup** | Duplicate item (so you can use it twice) | `10,\"@dup\"` |\n  // | **@execute** | Execute an instruction | `10,\"dup\",\"@execute\"` |\n  // | **@repeat** | Repeat | `4, \"@repeat\", [\"@kick\", 0.5, \"@wait\"]` |\n  // | **@forever** | Repeat forever | `\"@forever\", [\"@kick\", 0.5, \"@wait\"]` |\n  \"@dup\": ({ stack }) => stack.push(last(stack)),\n  \"@execute\": ({ operations, error }) => {\n    const instr = operations.pop()\n    if (isString(instr)) operations.push(\"@instr\")\n    else error(\"@execute\", ERR_EXPECT_STRING, instr)\n  },\n  \"@\": \"@execute\",\n  \"@repeat\": ({ stack, operations, error }) => {\n    const repetitions = stack.pop()\n    const pattern = last(operations)\n    if (!isArray(pattern)) error(\"@repeat\", ERR_EXPECT_PATTERN, pattern)\n    else {\n      for (let i = 1; i < repetitions; i++) {\n        operations.push(pattern)\n      }\n    }\n  },\n  \"@forever\": ({ operations, error }) => {\n    const pattern = last(operations)\n    if (isArray(pattern) && pattern.length) {\n      operations.push(\"@forever\")\n      operations.push(pattern)\n    } else error(\"@forever\", ERR_EXPECT_PATTERN, pattern)\n  },\n\n  // ## Iteration and lists\n  // | Name | Description | Example |\n  // |------|-------------|---------|\n  // | **@iter** | Iterate a pattern | `[[\"@iter\", [0.3, 1]], \"amp\", \"@set\"]` |\n  // | **@rotate** | Rotate a pattern | `[]` |\n  \"@iter\": ({ operations, error }) => {\n    const pattern = operations.pop()\n    if (!isArray(pattern) || !pattern.length) {\n      error(\"@iter\", ERR_EXPECT_PATTERN, pattern)\n    } else {\n      // Rotates the pattern and plays the first item only each time\n      // remove \"1st\" item, schedule, then push to back:\n      const first = pattern.splice(0, 1)\n      operations.push(first)\n      pattern.push(first)\n    }\n  },\n  \"@rotate\": ({ stack, operations, error }) => {\n    const pattern = operations.pop()\n    let rot = stack.pop()\n    if (isArray(pattern) && pattern.length > 0) {\n      // ensure rot is valid between -args.length to +args.length\n      rot = rot % pattern.length\n      var copy = pattern.splice(0)\n      // rotate in-place\n      pattern.push.apply(pattern, copy.slice(rot))\n      pattern.push.apply(pattern, copy.slice(0, rot))\n      // schedule a shallow copy:\n      operations.push(copy)\n    } else {\n      error(\"@rotate\", ERR_EXPECT_PATTERN, pattern)\n    }\n  },\n\n  // ## Utilities\n\n  // midi to frequency\n  // [60, '@mtof']\n  \"@mtof\": ({ stack }) => {\n    const midi = stack.pop()\n    const freq = 440 * Math.pow(2, (+midi - 69) / 12)\n    stack.push(freq)\n  },\n\n  // scale a value\n  // [value, fromLow, fromHi, toLow, toHi, \"@linear\"]\n  \"@linear\": ({ stack }) => {\n    const ohi = stack.pop()\n    const olo = stack.pop()\n    const ihi = stack.pop()\n    const ilo = stack.pop()\n    const v = stack.pop()\n\n    if (ihi === ilo) {\n      stack.push(olo)\n    } else {\n      stack.push(olo + (ohi - olo) * ((v - ilo) / (ihi - ilo)))\n    }\n  }\n}\n\n// Given a commands object, expand the aliases\nexport function expandAliases (commands) {\n  Object.keys(commands).forEach(name => {\n    const op = commands[name]\n    if (isString(op)) commands[name] = commands[op]\n  })\n  return commands\n}\n","// # VM\n\nimport { isArray, isString, isFn } from \"./utils\"\nimport { Process } from \"./process\"\nimport stdlib, {\n  expandAliases,\n  ERR_EXPECT_STRING,\n  ERR_EXPECT_PATTERN\n} from \"./commands\"\n\nconst assign = Object.assign\n\n// The purpose of the VM is to run processes concurrently. It also\n// mantains an extensible object of commands (operations mapped to functions)\n// that allows to add operations to the vm\n\n// TODO: probably is better to have functions and object instead of classes\n// will change in the future.\nexport class VM {\n  constructor (initialContext, options = {}) {\n    this.context = initialContext\n    this.procs = [] // the procs are inverse ordered by time\n    this.procsByName = {} // a map of names to procs\n    this.time = 0\n    this.commands = createCommands(this)\n    this.addCommands(stdlib)\n    this.onfork = options.onfork\n    this.onstop = options.onstop\n    this.onended = options.onended\n  }\n\n  // Run a program\n  run (program, sync = true) {\n    // if there are no processes, no need to sync\n    if (sync && this.procs.length) program = [\"@sync\", program]\n    return this.fork(null, this.context, program)\n  }\n\n  // Add more commands\n  addCommands (commands) {\n    if (isFn(commands)) commands = commands(this)\n    if (commands) assign(this.commands, expandAliases(commands))\n  }\n\n  // Create a new process\n  fork (name, parent, program, delay = 0, rate) {\n    const time = this.time + delay\n    // if has parent and no rate, try to use it\"s rate\n    if (!rate && parent) rate = parent.rate\n    // if has parent try to use it\"s context\n    const context = parent ? parent.context || parent : undefined\n    // create the new process and insert into the process stack\n    const proc = new Process(program, context, time, rate)\n    insert(proc, this.procs)\n    // if has name, register it\n    if (name) this.procsByName[name] = proc\n    if (this.onfork) this.onfork({ proc, name, parent, program, delay, rate })\n    return proc\n  }\n\n  // run the vm for the given amount of time (Infinity if not specified)\n  resume (dur = Infinity, limit = 10000) {\n    const { procs } = this\n    if (procs.length > 0) {\n      const nextTime = this.time + dur\n      while (--limit > 0 && at(procs) < nextTime) {\n        const proc = procs.pop()\n        if (proc.resume(this.commands, nextTime)) {\n          // the proc has more operations, re-schedule\n          insert(proc, this.procs)\n        } else {\n          if (this.onended) this.onended({ proc, time: this.time })\n        }\n      }\n      this.time = nextTime\n    } else {\n      this.time += dur\n    }\n    return procs.length > 0\n  }\n\n  stopAll () {\n    this.procs.length = 0\n  }\n\n  // The stop function can stop a proccess by name or by object\n  stop (name) {\n    let proc\n    if (typeof proc === \"string\") {\n      proc = this.procsByName[name]\n      this.procsByName[name] = null\n    } else {\n      proc = name\n      name = null\n    }\n    if (this.onstop) this.onstop({ name, proc })\n\n    remove(proc, this.procs)\n  }\n}\n\n// ## VM commands\n\n// | Name | Description | Example |\n// |------|-------------|---------|\n// | **@fork** | Fork | `@fork, [0.5, \"@wait\", \"@kick\"]` |\n// | **@spawn** | Spawn | `\"melody\", \"@spawn\", [0.5, \"@wait\", \"@kick\"]` |\n// | **@stop** | Stop current process | `@stop` |\n// | **@stop-all** | Stop all processes | `@stop-all` |\nfunction createCommands (vm) {\n  return {\n    \"@loop\": proc => {\n      const { operations, error } = proc\n      const pattern = operations.pop()\n      if (isArray(pattern)) vm.fork(null, proc, [\"@forever\", pattern])\n      else error(\"@loop\", ERR_EXPECT_PATTERN, pattern)\n    },\n    \"@fork\": proc => {\n      const { operations, error } = proc\n      let pattern = operations.pop()\n\n      if (isArray(pattern)) {\n        vm.fork(null, proc, pattern)\n      } else {\n        error(\"@fork\", ERR_EXPECT_PATTERN, pattern)\n      }\n    },\n    \"@spawn\": proc => {\n      const { stack, operations, error } = proc\n      const name = stack.pop()\n      let pattern = operations.pop()\n      if (!isString(name)) {\n        error(\"@spawn\", ERR_EXPECT_STRING, name)\n      } else if (!isArray(pattern)) {\n        error(\"@spawn\", ERR_EXPECT_PATTERN, pattern)\n      } else {\n        vm.stop(name)\n        vm.fork(name, proc, [\"@forever\", pattern])\n      }\n    },\n    \"@stop-all\": proc => vm.stopAll(),\n    \"@stop\": ({ stack }) => vm.stop(stack.pop())\n  }\n}\n\n// ## Internal VM functions\n\n// remove a process process\nfunction remove (proc, procs) {\n  let i = procs.length - 1\n  while (i >= 0 && procs[i] !== proc) {\n    i--\n  }\n  // if found, remove it\n  if (i !== -1) procs.splice(i, 1)\n  return i !== -1\n}\n\n// insert a process into a stack ordered by time\n// (in fact, is inverse order because it\"s a stack)\nfunction insert (proc, procs) {\n  if (procs.length === 0) {\n    // no need to sort: just push it\n    procs.push(proc)\n  } else {\n    // procs are sorted on insertion\n    let i = procs.length - 1\n    let p = procs[i]\n    while (p && p.time <= proc.time) {\n      i--\n      p = procs[i]\n    }\n    procs.splice(i + 1, 0, proc)\n  }\n  return proc\n}\n\n// get time of the next process\nfunction at (procs) {\n  const len = procs.length\n  return len ? procs[len - 1].time : Infinity\n}\n","// # Gibberish audio audio\nimport { isDef } from \"../../utils\"\n\nconst ERR_INST_MISSING = name => `Instrument \"${name}\" not found.`\n\n// Create an object with instrument definitions.\n// The instruments are created lazy\nconst instruments = Gibberish => ({\n  kick: {\n    params: [\"amp\", \"pitch\", \"decay\", \"tone\"],\n    init: () => new Gibberish.Kick({ decay: 0.2 }).connect()\n  },\n  snare: {\n    params: [\"amp\", \"tune\", \"cutoff\", \"snappy\"],\n    init: () => new Gibberish.Snare({ snappy: 1.5 }).connect()\n  },\n  hat: {\n    params: [\"amp\", \"pitch\"],\n    init: () => new Gibberish.Hat({ amp: 1.5 }).connect()\n  },\n  conga: {\n    params: [\"amp\", \"pitch\"],\n    init: () => new Gibberish.Conga({ amp: 0.25, freq: 400 }).connect()\n  },\n  clave: {\n    params: [\"amp\", \"pitch\"],\n    init: () => new Gibberish.Clave({ amp: 1 }).connect()\n  },\n  tom: {\n    params: [\"amp\", \"pitch\"],\n    init: () => new Gibberish.Tom({ amp: 0.25, freq: 400 }).connect()\n  },\n  clap: {\n    params: [\"amp\"],\n    init: () => new Gibberish.Clap({ amp: 0.5 }).connect()\n  },\n  cowbell: {\n    params: [\"amp\", \"pitch\"],\n    init: () => new Gibberish.Cowbell({ amp: 0.5 }).connect()\n  },\n  pluck: {\n    params: [\"freq\", \"amp\", \"blend\", \"damping\", \"velocity\"],\n    init: () => new Gibberish.PolyKarplusStrong({ maxVoices: 32 }).connect(),\n    prepare: (inst, context) => {\n      const freq = context.get(\"freq\")\n      if (freq > 0) {\n        inst.freq = freq\n        inst.damping = 1 - (-6) / Math.log(freq / Gibberish.sampleRate)\n      }\n      const amp = context.get(\"amp\")\n      if (amp) inst.amp = amp * amp * 0.5\n      const blend = context.get(\"blend\")\n      if (blend) inst.blend = blend\n    }\n  },\n  bass: {\n    params: [\"freq\", \"amp\", \"resonance\"],\n    init: () => new Gibberish.MonoSynth({\n      attack: 44,\n      decay: Gibberish.Time.beats(0.25),\n      filterMult: 0.25,\n      octave2: 0,\n      octave3: 0\n    }).connect()\n  }\n})\n\n// ## Audio commands\n\n// | Name | Description | Example |\n// |------|-------------|---------|\n// | **@get-bpm** | Get the global tempo value | `\"@pick\", [1.25, 1.5, 0.75], \"@get-bpm\", \"@*\", \"@set-bpm\"` |\n// | **@set-bpm** | Change the global tempo | `120, \"@set-bpm\"` |\n// | **@play-note** | Trigger a note with params | `{ inst: \"pluck\", amp: 0.5}, \"@note-params\"` |\n// | **@play** | Trigger a note | `\"@note\"` |\nconst initCommands = audio => ({\n  \"@play\": ({ context, error }) => {\n    const err = play(context, audio)\n    if (err) error(\"@play\", err)\n  },\n  \"@play-note\": ({ stack, context, error }) => {\n    const props = stack.pop()\n    const err = play(context.child(props), audio)\n    if (err) error(\"@play-note\", err)\n  },\n  \"@set-bpm\": ({ stack }) => {\n    const bpm = parseFloat(stack.pop(), 10)\n    if (bpm > 0) audio.bpm = bpm\n  },\n  \"@scale-tempo\": ({ stack }) => {\n    const factor = parseFloat(stack.pop(), 10)\n    if (factor) audio.bpm *= factor\n  }\n})\n\nexport default function init (Gibberish, options = {}) {\n  const audio = initAudioDriver(Gibberish, options)\n  audio.instruments = initInstruments(instruments(Gibberish))\n  audio.commands = initCommands(audio)\n  Gibberish.sequencers.push(sequencer(audio))\n\n  return function (vm) {\n    // Add the vm to the list of VMs\n    audio.vms.push(vm)\n    // Set the audio property to the audio driver\n    vm.audio = audio\n    return audio.commands\n  }\n}\n\n// Prepare the instruments object. Replace the params with prepare\nfunction initInstruments (instruments) {\n  Object.keys(instruments).forEach(name => {\n    const inst = instruments[name]\n    if (!inst.prepare) {\n      const params = inst.params || []\n      inst.prepare = (inst, context) => {\n        params.forEach(param => {\n          let value = context.get(param)\n          if (isDef(value)) {\n            inst[param] = value\n          }\n        })\n      }\n    }\n  })\n  return instruments\n}\n\nfunction sequencer (audio) {\n  const { vms, bpm2bpa } = audio\n  return {\n    tick () {\n      const len = audio.vms.length\n      const dur = audio.bpm * bpm2bpa\n      if (len === 1) {\n        vms[0].resume(dur)\n      } else if (len > 1) {\n        for (let i = 0; i < len; i++) {\n          vms[i].resume(dur)\n        }\n      }\n    }\n  }\n}\n\n// Trigger an instrument\nconst play = (context, audio) => {\n  const { instruments } = audio\n  const instName = context.get(\"inst\")\n  const instrument = instruments[instName]\n  if (!instrument) return ERR_INST_MISSING(instName)\n  if (!instrument.instance) instrument.instance = instrument.init()\n\n  const inst = instrument.instance\n  instrument.prepare(inst, context)\n  inst.freq ? inst.note(inst.freq) : inst.note()\n}\n\n// Init the audio driver\nfunction initAudioDriver (Gibberish, { bpm = 100 }) {\n  if (!Gibberish.context) Gibberish.init()\n  return {\n    Gibberish,\n    bpm: bpm,\n    sampleRate: Gibberish.context.sampleRate,\n    bpm2bpa: 1 / (60 * Gibberish.context.sampleRate),\n    vms: []\n  }\n}\n","const isString = (o) => typeof o === \"string\"\nconst { exp, E } = Math\n\nexport function ampToGain (amp) {\n  return (exp(amp) - 1) / (E - 1)\n}\n\nexport function plug (node, name, value) {\n  const target = node[name]\n  if (!target) throw Error(\"plug -- Can't find \" + name + \" of \" + node)\n  if (value === undefined || value === null) {\n    // ignore\n  } else if (target.value !== undefined) {\n    target.setValueAtTime(value, 0)\n  } else if (typeof target === \"function\") {\n    target.call(node, value)\n  }\n}\n\nexport function trigger (time, param, envelope) {\n  param.cancelScheduledValues(0)\n  param.setValueAtTime(0, 0)\n  envelope.forEach(([type, value, duration]) => {\n    const when = time + duration\n    if (type === \"lin\") {\n      param.linearRampToValueAtTime(value, when)\n    } else if (type === \"set\") {\n      param.setValueAtTime(value, when)\n    } else if (type === \"exp\") {\n      if (value === 0) value = 0.0000001\n      param.exponentialRampToValueAtTime(value, when)\n    }\n  })\n}\n\nexport function envelope (ac, envelope) {\n  const env = gain(ac, { gain: 0 })\n  env.trigger = (time) => trigger(time, env.gain, envelope)\n  return env\n}\n\nexport function adsr (ac, { attack, decay, sustain, release } = {}) {\n  attack = attack || 0.01\n  decay = decay || 0.1\n  sustain = sustain || 0.8\n  release = release || 0.2\n  return envelope(ac, [\n    [\"set\", 0, 0],\n    [\"lin\", 1, attack || 0.01],\n    [\"exp\", sustain, decay],\n    [\"exp\", 0, release]\n  ])\n}\n\nexport function audioNode (ac, name, config = {}) {\n  const n = ac[\"create\" + name]()\n  Object.keys(config).forEach(key => plug(n, key, config[key]))\n  return n\n}\n\nexport const osc = (ac, config) => audioNode(ac, \"Oscillator\", config)\nexport const gain = (ac, config) => audioNode(ac, \"Gain\", config)\n\nexport function polyphony (init, options = {}) {\n  const max = options.maxVoices || 16\n  const voices = []\n  for (var i = 0; i < max; i++) voices[i] = init()\n  let current = -1\n\n  return function next () {\n    current = (current + 1) % max\n    return voices[current]\n  }\n}\n\nexport function connected (object, connections) {\n  connections.reduce((src, next) => {\n    if (isString(src)) src = object[src]\n    if (isString(next)) next = object[next]\n    src.connect(next)\n    return next\n  })\n  return object\n}\n\nexport function connect (...nodes) {\n  nodes.reduce((prev, next) => {\n    prev.connect(next)\n    return next\n  })\n  return nodes\n}\n","/* global AudioContext */\nconst timeToBeats = (time, bpm) => time * bpm / 60\nconst beatsToTime = (beats, bpm) => beats * 60 / bpm\nimport {\n  osc, gain, connected, plug, adsr, polyphony, ampToGain\n} from \"./synth-kit\"\n\nconst ERR_INSTRUMENT_NOT_FOUND = \"Instrument not found: \"\n\nfunction initContext (ac) {\n  // Shim to make connect chainable (soon to be implemented native)\n  if (ac && ac.createGain) {\n    var proto = Object.getPrototypeOf(Object.getPrototypeOf(ac.createGain()))\n    var _connect = proto.connect\n    proto.connect = function () {\n      _connect.apply(this, arguments)\n      return this\n    }\n  }\n  return ac\n}\n\nexport default function waa (options = {}) {\n  const ac = initContext(options.context || new AudioContext())\n  const driver = {\n    paused: false,\n    bpm: options.bpm || 120,\n    instruments: {\n      pluck: initPluck(ac)\n    }\n  }\n\n  driver.stop = () => clearInterval(driver.seq)\n\n  const step = 0.1\n  const dur = timeToBeats(step, driver.bpm)\n  return function (vm) {\n    const zero = ac.currentTime\n    clock(ac, time => {\n      vm.resume(dur)\n    }, step)\n    vm.audio = driver\n    return {\n      \"@play\": ({ time, context, error }) => {\n        const when = beatsToTime(time, driver.bpm) + zero\n        const inst = context.get(\"inst\")\n        const trigger = driver.instruments[inst]\n        if (!trigger) error(\"@play\", ERR_INSTRUMENT_NOT_FOUND, inst)\n        else trigger(when, context)\n      }\n    }\n  }\n}\n\nfunction clock (ac, callback, time) {\n  const lookAhead = time || 0.1\n  const updateInterval = lookAhead / 3\n  let next = ac.currentTime + lookAhead\n  const tick = () => {\n    if (ac.currentTime + lookAhead >= next) {\n      callback(next)\n      next += lookAhead\n    }\n  }\n  tick()\n  return setInterval(tick, updateInterval)\n}\n\nfunction initSnare (ac) {\n  const snare = connected({\n    osc: white(ac),\n    envelope: perc(ac),\n    amp: gain(ac, { gain: 0 })\n  })\n}\n\nfunction initPluck (ac) {\n  const synth = polyphony(() =>\n    connected({\n      osc: osc(ac, { start: 0 }),\n      envelope: adsr(ac),\n      amp: gain(ac, { gain: 0 })\n    },\n    [\"osc\", \"envelope\", \"amp\", ac.destination])\n  )\n\n  return function (time, ctx) {\n    const freq = ctx.get(\"freq\")\n    let amp = ampToGain(+ctx.get(\"amp\"))\n    console.log(\"pluck\", freq, amp)\n    const s = synth()\n    plug(s.osc, \"frequency\", freq)\n    plug(s.amp, \"gain\", amp)\n    s.envelope.trigger(time)\n  }\n}\n","// ## Randomness\nimport { isArray } from \"../utils\"\nimport { ERR_EXPECT_PATTERN } from \"../commands\"\nconst { floor } = Math\n\n// | Name | Description | Example |\n// |------|-------------|---------|\n// | **@random** | Generate a random number between 0 and 1 | `[\"@random\", \"amp\", \"@set\"]` |\n// | **@rand** | Alias for @random | |\n// | **@srandom** | Generate a random number between -1 and 1 | `[\"@srandom\", \"phase\", \"@set\"]` |\n// | **@srand** | Alias for @srandom | |\n// | **@randi** | Generate a random integer between 0 and n | `[60, \"@randi\", \"midi\", \"@set\"]` |\n// | **@pick** | Pick a random element from a list | `[\"@pick\", [1, 2, 3, 4]]` |\n// | **@shuffle** | Shuffle a list | `\"@shuffle\", [1, 2, 3]` |\n// | **@chance** | Probabilistic execution | `probability, \"@chance\", executed-if-true, executed-if-false` |\nexport default function random ({ random } = {}) {\n  // allow to use a custom random function\n  const rnd = random || Math.random\n  // a function that generates integer random from 0 to n\n  const irnd = n => floor(rnd() * n)\n\n  const shuffle = a => {\n    var j, x, i\n    for (i = a.length; i; i--) {\n      j = floor(random() * i)\n      x = a[i - 1]\n      a[i - 1] = a[j]\n      a[j] = x\n    }\n  }\n\n  return {\n    \"@random\": ({ stack }) => stack.push(rnd()),\n    \"@rand\": \"@random\",\n    \"@srandom\": ({ stack }) => stack.push(rnd() * 2 - 1),\n    \"@srand\": \"@srandom\",\n    \"@randi\": ({ stack }) => stack.push(irnd(stack.pop())),\n    \"@pick\": proc => {\n      const { operations, error } = proc\n      const pattern = operations.pop()\n      if (!isArray(pattern)) {\n        operations.push(pattern)\n        error(\"Can't pick an element if is not an array\", pattern)\n      } else {\n        const i = irnd(pattern.length)\n        operations.push(pattern[i])\n      }\n    },\n    \"@chance\": ({ stack, operations }) => {\n      const prob = stack.pop()\n      const pattern = operations.pop()\n      if (rnd() < prob) {\n        // Skip item after\n        operations.pop()\n        // Push the pattern\n        operations.push(pattern)\n      }\n    },\n    \"@shuffle\": ({ stack, operations, error }) => {\n      const pattern = operations.pop()\n      if (!isArray(pattern)) error(\"@shuffle\", ERR_EXPECT_PATTERN, pattern)\n      else operations.push(shuffle(pattern))\n    }\n  }\n}\n","// # Debug operations\nimport { peek } from \"../utils\"\n\n// | Name | Description | Example |\n// |------|-------------|---------|\n// | **@print** | Print the last value of the stack | `10,\"@print\"` |\n// | **@log** | Log the name with the last value of the stack | `\"@random\", \"amp\", \"@log\"` |\nexport default function debug ({ log } = {}) {\n  log = log || console.log.bind(console)\n\n  return {\n    \"@print\": proc => {\n      const { stack } = proc\n      const last = stack.length ? peek(stack) : \"<Empty Stack>\"\n      log(\"@print\", last, \"(id, time)\", proc.id, proc.time)\n    },\n    \"@log\": proc => {\n      const { stack } = proc\n      const name = stack.pop()\n      const last = stack.length ? peek(stack) : \"<Empty Stack>\"\n      log(\"@log\", name, last, \"(id, time)\", proc.id, proc.time)\n    },\n    \"@debug\": proc => {\n      const { stack } = proc\n      log(\"@debug\", stack, proc.id, proc.time)\n    }\n  }\n}\n","// # Compatibility plugin\n\nimport { isArray } from \"../utils\"\nimport { ERR_EXPECT_PATTERN } from \"../commands\"\n\n// This plugin adds language compatibility to the previous version\n\n// Given an instrument name, returns a command that play that instrument\nconst inst = name => ({ operations }) => {\n  operations.push([name, \"inst\", \"@let\", \"@play\"])\n}\nconst instNote = (name, p1, p2) => ({ stack, operations }) => {\n  operations.push(p2\n    ? [stack.pop(), p2, \"@let\", stack.pop(), p1, \"@let\",\n      name, \"inst\", \"@let\", \"@play\"]\n    : [stack.pop(), p1, \"@let\",\n      name, \"inst\", \"@let\", \"@play\"])\n}\n\nexport default function init () {\n  return {\n    // get and set for freq and amp\n    \"@set-freq\": ({ context, stack }) => context.set(\"freq\", stack.pop()),\n    \"@set-amp\": ({ context, stack }) => context.set(\"amp\", stack.pop()),\n    \"@get-freq\": ({ stack, context }) => stack.push(context.get(\"freq\")),\n    \"@get-amp\": ({ stack, context }) => stack.push(context.get(\"amp\")),\n\n    // I think reverse is not very useful in this context\n    // because: [\"@iter\", [\"@reverse\", [1, 2, 3]]] doesn\"t work, for example\n    \"@reverse\": ({ operations, error }) => {\n      const pattern = operations.pop()\n      if (!isArray(pattern)) error(\"@reverse\", ERR_EXPECT_PATTERN, pattern)\n      else operations.push(pattern.slice().reverse())\n    },\n    // I think @map is not a good name\n    \"@map\": \"@linear\",\n\n    // Instrument names\n    \"@pluck\": inst(\"pluck\"),\n    \"@pluck-note\": instNote(\"pluck\", \"freq\", \"amp\"),\n    \"@bass\": inst(\"bass\"),\n    \"@bass-note\": instNote(\"bass\", \"freq\", \"amp\"),\n    \"@hat\": inst(\"hat\"),\n    \"@hat-note\": instNote(\"hat\", \"amp\"),\n    \"@kick\": inst(\"kick\"),\n    \"@kick-note\": instNote(\"kick\", \"amp\"),\n    \"@snare\": inst(\"snare\"),\n    \"@snare-note\": instNote(\"snare\", \"amp\"),\n    \"@conga\": inst(\"conga\"),\n    \"@conga-note\": instNote(\"conga\", \"amp\"),\n    \"@clave\": inst(\"clave\"),\n    \"@clave-note\": instNote(\"clave\", \"amp\"),\n    \"@tom\": inst(\"tom\"),\n    \"@tom-note\": instNote(\"tom\", \"amp\"),\n  }\n}\n","// # Audio Scheduler Virtual Machine\nimport { VM } from './vm'\nimport gibberish from './audio/gibberish'\nimport waa from './audio/waa'\nimport random from './ext/random'\nimport debug from './ext/debug'\nimport compatibility from './ext/compatibility'\n\n// ## Architecture Overview\n\n// The main purpose of the virtual machine is to run processes concurrently.\n// It holds a `commands` object (that maps instruction names to functions)\n// and schedules a collection of `processes`. Each **process** has an values `stack`\n// and `operations` stack (to be executed).\n\n// ## API\nexport function initGibberish (Gibberish, options = {}) {\n  return init(gibberish(Gibberish, options), options)\n}\n\nexport function initWebAudio (Tone, options = {}) {\n  return init(waa(Tone, options), options)\n}\n\n// the init function creates a vm controlled by Gibberish\nexport function init (driver, options = {}) {\n  const { plugins } = options\n  // Create the virtual machine\n  const vm = new VM({ amp: 0.5, freq: 440 }, options)\n  // Use the audio driver\n  vm.addCommands(driver)\n  // Include all the command extensions\n  vm.addCommands(random(options))\n  vm.addCommands(debug(options))\n  vm.addCommands(compatibility(options))\n  // Add the plugins if any\n  if (plugins) plugins.forEach(cmds => vm.addCommands(cmds))\n\n  return vm\n}\n"],"names":["assign","isArray","Array","isString","x","isFn","isDef","last","a","length","peek","wrap","b","defer","fn","data","isCommand","o","isProgram","procId","ERR_INSTR_NOT_FOUND","ERR_LIMIT_REACHED","Process","program","context","time","rate","id","stack","operations","Context","error","bind","commands","instr","pop","undefined","i","push","cmd","Infinity","limit","step","Error","msg","obj","parent","local","Object","c","target","value","let","ERR_EXPECT_PATTERN","ERR_EXPECT_STRING","op1","op2","test","success","set","get","proc","wait","Math","abs","Number","floor","factor","parseFloat","pattern","repetitions","first","splice","rot","copy","apply","slice","midi","freq","pow","ohi","olo","ihi","ilo","v","expandAliases","keys","forEach","op","name","VM","initialContext","options","procs","procsByName","createCommands","addCommands","stdlib","onfork","onstop","onended","sync","fork","delay","dur","nextTime","at","resume","vm","stop","stopAll","remove","insert","p","len","ERR_INST_MISSING","instruments","Gibberish","Kick","decay","connect","Snare","snappy","Hat","amp","Conga","Clave","Tom","Clap","Cowbell","PolyKarplusStrong","maxVoices","inst","damping","log","sampleRate","blend","MonoSynth","Time","beats","initCommands","err","play","audio","props","child","bpm","init","initAudioDriver","initInstruments","sequencers","sequencer","vms","prepare","params","param","bpm2bpa","instName","instrument","instance","note","exp","E","ampToGain","plug","node","setValueAtTime","call","trigger","envelope","cancelScheduledValues","type","duration","when","linearRampToValueAtTime","exponentialRampToValueAtTime","ac","env","gain","adsr","attack","sustain","release","audioNode","config","n","key","osc","polyphony","max","voices","current","next","connected","object","connections","reduce","src","timeToBeats","beatsToTime","ERR_INSTRUMENT_NOT_FOUND","initContext","createGain","proto","getPrototypeOf","_connect","arguments","waa","AudioContext","driver","initPluck","clearInterval","seq","zero","currentTime","clock","callback","lookAhead","updateInterval","tick","setInterval","synth","start","destination","ctx","s","random","rnd","irnd","shuffle","j","prob","debug","console","instNote","p1","p2","reverse","initGibberish","gibberish","initWebAudio","Tone","plugins","compatibility","cmds"],"mappings":"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"}