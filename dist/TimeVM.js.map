{"version":3,"file":"TimeVM.js","sources":["../src/commands.js","../src/process.js","../src/scheduler.js","../src/vm.js","../src/gibberish.js","../src/builders.js","../src/index.js"],"sourcesContent":["// # Commands\n\n// **Utilities**\nconst isArray = Array.isArray;\nconst isString = o => typeof o === \"string\";\n\n// get last element of the stack\nconst peek = stack => stack[stack.length - 1];\n// midi to frequency\nconst mtof = pitch => 440 * Math.pow(2, (+pitch - 69) / 12);\n// Given a commands object, expand the aliases\nconst expandAliases = commands =>\n  Object.keys(commands).reduce(\n    (commands, cmd) => {\n      const op = commands[cmd];\n      if (typeof op === \"string\") {\n        commands[cmd] = commands[op];\n      }\n      return commands;\n    },\n    commands\n  );\n\n// ## Core\n\n// This are the core operations: execute instructions, modify\n// process time and context variables\n\n// | Name | Description | Example |\n// |------|-------------|---------|\n// | **@dup** | Duplicate item (so you can use it twice) | `10,@dup` |\n// | **@execute** | Execute an instruction | `10,'dup','@execute'` |\n// | **@** | Alias of @execute | `10,'dup','@'` |\n// | **@let** | Assign a value to the local context | `10,'repetitions',@let` |\n// | **@set** | Assign a value to the global context | `10,'parts',@set` |\n// | **@get** | Push the value of a variable into the stack | `'repetitions',@get` |\n// | **@wait** | Wait an amount of time | `1,@wait` |\n// | **@sync** | Wait until next beat | `@sync` |\n// | **@fork** | Fork | `@fork, [0.5, '@wait', '@kick']` |\n// | **@spawn** | Spawn | `\"part-A\", @spawn, [0.5, '@wait', '@kick']` |\n// | **@stop** | Stop current process | `@stop` |\n// | **@stop-all** | Stop all processes )| `@stop-all` |\nexport const core = expandAliases({\n  \"@dup\": ({ stack }) => stack.push(peek(stack)),\n  \"@execute\": ({ stack }, { error }) => {\n    const instr = stack.pop();\n    if (typeof instr !== \"string\")\n      error(\"Trying to execute something that is not a string: \" + instr);\n    else\n      stack.push(\"@\" + instr);\n  },\n  \"@\": \"@execute\",\n\n  \"@let\": ({ stack, context }) => context.let(stack.pop(), stack.pop()),\n  \"@set\": ({ stack, context }) => context.set(stack.pop(), stack.pop()),\n  \"@get\": ({ stack, context }) => stack.push(context.get(stack.pop())),\n\n  \"@wait\": proc => proc.wait(Math.abs(Number(proc.stack.pop()))),\n  \"@sync\": proc => proc.wait(Math.floor(proc.time) + 1 - proc.time),\n\n  \"@stop\": ({ stack }, { stop }) => {\n    const name = stack.pop();\n    stop(name);\n  },\n  \"@stop-all\": (proc, { stopAll }) => stopAll(),\n\n  \"@fork\": (proc, { error, fork }) => {\n    const { instructions } = proc;\n    let pattern = instructions.pop();\n\n    if (isArray(pattern)) {\n      fork(null, proc, pattern);\n    } else {\n      error(\"@fork\", ERR_BAD_PATTERN, pattern);\n    }\n  },\n  \"@spawn\": (proc, { stop, fork, error }) => {\n    const { stack, instructions } = proc;\n    const name = stack.pop();\n    let pattern = instructions.pop();\n    if (!isString(name))\n      error(\"@spawn\", ERR_NAME, name);\n    else if (!isArray(pattern))\n      error(\"@spawn\", ERR_BAD_PATTERN, pattern);\n    else {\n      stop(name);\n      fork(name, proc, [\"@forever\", pattern]);\n    }\n  }\n});\n\n// ## Repeat and loop\n\n// | Name | Description | Example |\n// |------|-------------|---------|\n// | **@repeat** | Repeat a pattern | `4, @repeat, ['@kick', 0.5, '@wait']` |\nexport const repetition = {\n  \"@repeat\": ({ stack, instructions }) => {\n    const repetitions = stack.pop();\n    const pattern = peek(instructions);\n    if (!isArray(pattern)) throw Error(\"Can't repeat: \" + pattern);\n    for (let i = 1; i < repetitions; i++) {\n      instructions.push(pattern);\n    }\n  },\n  \"@forever\": ({ instructions }) => {\n    const pattern = peek(instructions);\n    if (!isArray(pattern)) throw Error(\"Can't forover: \" + pattern);\n    if (pattern.length) {\n      instructions.push(\"@forever\");\n      instructions.push(pattern);\n    }\n  },\n  \"@loop\": (proc, { error, fork }) => {\n    const { instructions } = proc;\n    const pattern = instructions.pop();\n    if (isArray(pattern)) fork(null, proc, [\"@forever\", pattern]);\n    else error(\"@loop\", ERR_BAD_PATTERN, pattern);\n  }\n};\n\n// ## Iteration and lists\n// | Name | Description | Example |\n// |------|-------------|---------|\n// | **@iter** | Iterate a pattern | `[[\"@iter\", [0.3, 1]], \"@set-amp\"]` |\nconst lists = {\n  \"@iter\": ({ instructions }) => {\n    const pattern = instructions.pop();\n    if (!isArray(pattern) || !pattern.length)\n      error(\"Can't iterate:\", pattern);\n    else {\n      // Rotates the pattern and plays the first item only each time\n      // remove '1st' item, schedule, then push to back:\n      const first = pattern.splice(0, 1);\n      instructions.push(first);\n      pattern.push(first);\n    }\n  }\n};\n\n// ## Randomness\n\n// generate a random number between 0 and n\nconst rnd = n => Math.floor(Math.random() * n);\n\n// | Name | Description | Example |\n// |------|-------------|---------|\n// | **@random** | Generate a random number between 0 and 1 | `[\"@random\", \"amp\", \"@set\"]` |\n// | **@rand** | Alias for @random | |\n// | **@srandom** | Generate a random number between -1 and 1 | `[\"@srandom\", \"phase\", \"@set\"]` |\n// | **@srand** | Alias for @srandom | |\n// | **@randi** | Generate a random integer between 0 and n | `[60, \"@randi\", \"midi\", \"@set\"]` |\n// | **@pick** | Pick a random element from a list | `[\"@pick\", [1, 2, 3, 4]]` |\n// | **@chance** | Probabilistic execution | `probability, \"@chance\", executed-if-true, executed-if-false` |\nconst random = expandAliases({\n  \"@random\": ({ stack }) => stack.push(Math.random()),\n  \"@rand\": \"@random\",\n  \"@srandom\": ({ stack }) => stack.push(Math.random * 2 - 1),\n  \"@srand\": \"@srandom\",\n  \"@randi\": ({ stack }) => stack.push(rnd(stack.pop())),\n  \"@pick\": ({ stack, instructions }, { error }) => {\n    const pattern = instructions.pop();\n    if (!isArray(pattern)) {\n      instructions.push(pattern);\n      error(\"Can't pick an element if is not an array\", pattern);\n    } else {\n      const i = rnd(pattern.length);\n      instructions.push(pattern[i]);\n    }\n  },\n  \"@chance\": ({ stack, instructions }) => {\n    const prob = stack.pop();\n    const pattern = instructions.pop();\n    if (Math.random() < prob) {\n      // Skip item after\n      instructions.pop();\n      // Push the pattern\n      instructions.push(pattern);\n    }\n  }\n});\n\n// ## Arithmetic\n\n// A generic operation that pops one value and pushes on result\nconst op1 = fn =>\n  ({ stack }) => {\n    stack.push(fn(stack.pop()));\n  };\n\n// A generic operation that pops two values and pushes one result\nconst op2 = fn =>\n  ({ stack }) => {\n    stack.push(fn(stack.pop(), stack.pop()));\n  };\n\n// a modulo operation that handles negative n more appropriately\n// e.g. wrap(-1, 3) returns 2\n// see http://en.wikipedia.org/wiki/Modulo_operation\n// see also http://jsperf.com/modulo-for-negative-numbers\nconst wrap = (a, b) => (a % b + b) % b;\n\nexport const arithmetic = expandAliases({\n  \"@+\": op2((a, b) => a + b),\n  add: \"@+\",\n  \"@-\": op2((a, b) => a - b),\n  \"@sub\": \"@-\",\n  \"@*\": op2((a, b) => a * b),\n  \"@mul\": \"@*\",\n  \"@/\": op2((a, b) => b === 0 ? 0 : b / a),\n  \"@div\": \"@/\",\n  \"@%\": op2((a, b) => b === 0 ? 0 : wrap(a, b)),\n  \"@wrap\": \"@%\",\n  \"@mod\": op2((a, b) => b === 0 ? 0 : a % b),\n  \"@neg\": op1(a => -a)\n});\n\n// ## Conditionals\n// _should they return 1 and 0 instead of bools?_\n\nexport const logic = {\n  \"@cond\": ({ stack, instructions }) => {\n    const test = stack.pop();\n    // this is the pattern to execute if the test passes\n    const success = instructions.pop();\n    // the next pattern is the \"else\" part\n    if (test) {\n      // remove the \"else\" part\n      instructions.pop();\n      instructions.push(success);\n    }\n  },\n  \"@>\": op2((a, b) => a > b),\n  \"@>=\": op2((a, b) => a >= b),\n  \"@<\": op2((a, b) => a < b),\n  \"@<=\": op2((a, b) => a <= b),\n  \"@==\": op2((a, b) => a === b),\n  \"@!=\": op2((a, b) => a !== b),\n  \"@!\": op1(a => !a),\n  \"@not\": \"@!\",\n  \"@&&\": op2((a, b) => a && b),\n  \"@and\": \"@&&\",\n  \"@||\": op2((a, b) => a || b),\n  \"@or\": \"@||\"\n};\n\n// ## Debug operations\n\n// | Name | Description | Example |\n// |------|-------------|---------|\n// | **@print** | Print the last value of the stack | `10,\"@print\"` |\n// | **@log** | Log the name with the last value of the stack | `\"@random\", \"amp\", \"@log\"` |\nexport const debug = {\n  \"@print\": (proc, { log }) => {\n    const { stack } = proc;\n    const last = stack.length ? peek(stack) : \"<Empty Stack>\";\n    log(\"@print\", last, \"(id, time)\", proc.id, proc.time);\n  },\n  \"@log\": (proc, { log }) => {\n    const { stack } = proc;\n    const name = stack.pop();\n    const last = stack.length ? peek(stack) : \"<Empty Stack>\";\n    log(\"@log\", name, last, \"(id, time)\", proc.id, proc.time);\n  },\n  \"@debug\": (proc, { log }) => {\n    const { stack } = proc\n    log('@debug', stack, proc.id, proc.time)\n  }\n};\n\nexport const all = Object.assign(\n  {},\n  core,\n  repetition,\n  lists,\n  arithmetic,\n  random,\n  logic,\n  debug\n);\n","// # Process\n\nconst isCommand = o => typeof o === \"string\" && o[0] === \"@\";\nconst isProgram = Array.isArray;\nlet procId = 1;\n\n// Processes are the principal computation unit. It departures from typical\n// processes in that it model the concept of time\nexport class Process {\n  constructor(program, context, time, rate) {\n    this.id = \"proc-\" + procId++;\n    // a stack of values\n    this.stack = [];\n    // the instructions are stored in a stack (in reverse order)\n    this.instructions = program ? [program] : [];\n    // the context is used to store variables with scope\n    this.context = new Context(context);\n    // the current time\n    this.time = typeof time === \"number\" ? time : 0;\n    // how fast time passes\n    this.rate = typeof rate === \"number\" ? rate : 1;\n  }\n\n  // wait an amount of time\n  wait (time) {\n    this.time += this.rate * time\n  }\n\n  // To run an instruction, the process uses a _commands_ object (a map from\n  // a instruction to a function) and an actions object (that will be exposed\n  // to that function an uses as communication mechanism with the outside world)\n  // The `step` function runs the next instruction of the process\n  step(commands, actions) {\n    const { instructions } = this;\n    if (instructions.length) {\n      const instr = instructions.pop();\n      if (instr === null || instr === undefined) {\n        // ignore\n      } else if (typeof instruction === \"function\") {\n        instruction()\n      } else if (isProgram(instr)) {\n        // if it's program, and since the instructions are stored into an stack,\n        // we need add to the program instructions in reverse order\n        for (let i = instr.length - 1; i >= 0; i--) {\n          instructions.push(instr[i]);\n        }\n      } else if (isCommand(instr)) {\n        const operation = commands[instr];\n        if (typeof operation === \"function\") operation(this, actions);\n        else actions.error(\"Instruction '\" + instr + \"' not recognized.\");\n      } else {\n        // if it's a value, push it into the stack\n        this.stack.push(instr);\n      }\n    }\n  }\n\n  // the `resume` function run all the instructions until time is reached\n  resume(commands, actions, time = Infinity, limit = 10000) {\n    const { instructions } = this;\n    while (--limit > 0 && this.time < time && instructions.length) {\n      this.step(commands, actions);\n    }\n    if (limit === 0)\n      actions.error(\"Run limit reached. Probably an infinite loop.\");\n    return instructions.length > 0;\n  }\n}\n\n// ## Context\n\n// A context is a hierarchical structure to store values with scope\nexport class Context {\n  constructor(parent) {\n    if (parent instanceof Context) this.parent = parent\n    else if (parent) this.local = Object.assign({}, parent)\n  }\n  // get a value from a context\n  get(id) {\n    let target = this;\n    while (target.value(id) === undefined && target.parent) {\n      target = target.parent;\n    }\n    return target.value(id);\n  }\n\n  // set a value from a context\n  set(id, value) {\n    let target = this;\n    while (target.value(id) === undefined && target.parent) {\n      target = target.parent;\n    }\n    target.let(id, value);\n  }\n  // get a value from the local scope of a context\n  value(id) {\n    return this.local ? this.local[id] : undefined;\n  }\n\n  // set a value into the local scope of a context\n  let(id, value) {\n    if (!this.local) this.local = {};\n    this.local[id] = value;\n  }\n}\n","// # Scheduler\nimport { Process, Context } from './process'\n\n// TODO: probably is better to have functions and object instead of classes\n// will change in the future\nexport class Scheduler {\n  constructor() {\n    this.procs = []; // the procs are inverse ordered by time\n    this.procsByName = {}; // a map of names to procs\n    this.time = 0;\n    // the action are exposed to be used in commands\n    this.actions = {\n      fork: this.fork.bind(this),\n      stop: this.stop.bind(this),\n      stopAll: this.stopAll.bind(this)\n    }\n  }\n\n  // Create a new process\n  fork(name, parent, program, delay = 0, rate) {\n    const time = this.time + delay;\n    if (!rate && parent) rate = parent.rate\n    const context = parent ? parent.context || parent : undefined\n    // Create a child context\n    const proc = new Process(program, context, time, rate)\n    push(proc, this.procs)\n    if (name) this.procsByName[name] = proc\n    return proc\n  }\n\n  // run the scheduler for the given time (Infinity if not specified)\n  resume(commands, actions, dur = Infinity, limit = 10000) {\n    const { procs } = this\n    if (procs.length === 0) return false\n    const time = this.time + dur\n    while (--limit > 0 && at(procs) < time) {\n      const proc = procs.pop();\n      if (proc.resume(commands, actions, time)) {\n        // the proc has more operations, re-schedule\n        push(proc, this.procs);\n      }\n    }\n    this.time = time;\n    return procs.length > 0;\n  }\n\n  stopAll () {\n    this.procs.length = 0\n  }\n\n  // The stop function can stop a proccess by name or by object\n  stop (proc) {\n    if (typeof proc === 'string') {\n      const name = proc\n      proc = this.procsByName[name]\n      this.procsByName[name] = null\n    }\n    remove(proc, this.procs)\n  }\n}\n\n// remove the process\nfunction remove(proc, procs) {\n  let i = procs.length - 1\n  while (i >= 0 && procs[i] !== proc) i--\n  // if found, remove it\n  if (i !== -1) procs.splice(i, 1)\n}\n\n// **Private functions**\n\n// insert a process into a stack ordered by time\n// (in fact, is in inverse order because is a stack)\nfunction push(proc, procs) {\n  if (procs.length === 0) {\n    // no need to sort: just push it\n    procs.push(proc);\n  } else {\n    // procs are sorted on insertion\n    let i = procs.length - 1;\n    let p = procs[i];\n    while (p && p.time <= proc.time) {\n      i--;\n      p = procs[i];\n    }\n    procs.splice(i + 1, 0, proc);\n  }\n  return proc;\n}\n\n// get time of the next process\nfunction at (procs) {\n  const len = procs.length\n  return len ? procs[len - 1].time : Infinity;\n}\n","// # Virtual Machine\n\nimport { all } from \"./commands\";\nimport { Scheduler } from \"./scheduler\";\n\nexport const defaultActions = {\n  log: console.log.bind(console),\n  error: console.error.bind(console)\n};\n\nexport class VM {\n  // plugins is an array of plugins: objects with `{ commands, actions }`\n  constructor(plugins = []) {\n    this.scheduler = new Scheduler();\n    this.initialContext = { amp: 0.5, freq: 440 };\n\n    // commands are a map of instructions to commands with the form:\n    // `{ '@instruction': (proc, actions) => ... }`\n    this.commands = {};\n    // actions are available to the commands\n    this.actions = Object.assign({}, defaultActions);\n    // the scheduler itself is a plugin (has commands and actions)\n    this.usePlugin(this.scheduler);\n    plugins.forEach(plugin => this.usePlugin(plugin));\n  }\n\n  run(program, delay, rate) {\n    this.scheduler.fork(null, this.initialContext, program, delay, rate);\n  }\n\n  // advance the virtual machine by a time ammount\n  tick(duration) {\n    this.scheduler.resume(this.commands, this.actions, duration);\n  }\n\n  // A plugin is an object with two properties:\n  // - commands: a map of instructions to commands\n  // - actions: a map of actions names to actions\n  usePlugin(plugin) {\n    Object.assign(this.commands, plugin.commands);\n    Object.assign(this.actions, plugin.actions);\n  }\n}\n","let bpm = 100;\nlet sampleRate = null;\nlet bpm2bpa = null;\nlet vms = [];\nlet instruments = null;\nlet commands = null;\n\nconst instrumentCmds = {\n  \"@pluck\": ({ stack }, { note }) => note(\"\")\n};\n\nexport function gibberish(Gibberish, vm) {\n  if (arguments.length === 1) return vm => gibberish(Gibberish, vm);\n\n  if (sampleRate === null) {\n    Gibberish.init();\n    sampleRate = Gibberish.context.sampleRate;\n    bpm2bpa = 1 / (60 * sampleRate);\n    instruments = createInstruments(Gibberish, instConfig);\n    commands = createCommands(instruments, cmdConfig);\n    Gibberish.sequencers.push(sequencer);\n  }\n\n  vms.push(vm);\n  vm.usePlugin({ actions: instruments, commands });\n  return Gibberish;\n}\n\n// The Gibberish sequencer that controlls all\nconst sequencer = {\n  tick() {\n    const len = vms.length;\n    if (len === 0) return;\n    const dur = bpm * bpm2bpa;\n    for (let i = 0; i < len; i++) {\n      vms[i].tick(dur);\n    }\n  }\n};\n\n// This is the instruments configuration\nconst instConfig = [\n  [\"kick\", \"Kick\", { decay: 0.2 }],\n  [\"snare\", \"Snare\", { snappy: 1.5 }],\n  [\"hat\", \"Hat\", { amp: 1.5 }],\n  [\"conga\", \"Conga\", { amp: 0.25, freq: 400 }],\n  [\"tom\", \"Tom\", { amp: 0.25, freq: 400 }],\n  [\"pluck\", \"PolyKarplusStrong\", { maxVoices: 32 }],\n  [\n    \"bass\",\n    \"MonoSynth\",\n    {\n      attack: 44,\n      decay: 0.25, // FIXME(danigb) -- it was: Gibberish.Time.beats(0.25),\n      filterMult: 0.25,\n      octave2: 0,\n      octave3: 0\n    }\n  ]\n];\n// Given a instruments configuration, create the Giberish instruments\nfunction createInstruments(G, config) {\n  return config.reduce(\n    (insts, [name, type, params]) => {\n      insts[name] = new G[type](params).connect();\n      return insts;\n    },\n    {}\n  );\n}\n\n// ## Commands\n\n// A trigger function receives the instrument and the parameters\nconst tr1 = (inst, amp) => {\n  inst.amp = amp\n  inst.note()\n}\n// trigger an instrument with 2 params\nconst tr2 = (inst, amp, freq) => {\n  inst.amp = amp\n  inst.freq = freq\n  inst.note()\n}\n// the bass is only triggered if the frequency is positive\n// the bass is only triggered if the frequency is positive\nconst trBass = (bass, amp, freq) => {\n  if (freq > 0) bass.note(amp, freq);\n};\n// trigger the pluck requires adjust dump and compensate volume\nconst trPluck = (strings, amp, freq) => {\n  if (freq > 0) {\n    // This is not in any way accurate, just a hack to make @set-dur do something semi-meaningful\n    strings.damping = 1 - -6 / Math.log(freq / sampleRate);\n    // Strings by default seem too quiet:\n    strings.note(freq, amp * amp * 2);\n  }\n};\n\n// ## Instrument commands\n\n// | Name | Description | Example |\n// |------|-------------|---------|\n// | **@pluck** | Trigger a string sound | `@pluck` |\n// | **@pluck-note** | Trigger a string sound passing parameters | `freq, amp, @pluck` |\n// | **@bass** | Trigger a bass sound | `@bass` |\n// | **@bass-note** | Trigger a bass sound passing parameters | `freq, amp, @bass` |\nconst cmdConfig = {\n  pluck: [\"amp\", \"freq\", trPluck],\n  bass: [\"amp\", \"freq\", trBass],\n  kick: [\"amp\", null, tr1],\n  snare: [\"amp\", null, tr1],\n  hat: [\"amp\", null, tr1],\n  conga: [\"amp\", \"freq\", tr2],\n  tom: [\"amp\", \"freq\", tr2]\n};\n\nfunction createCommands(instruments, config) {\n  return Object.keys(config).reduce(\n    (cmds, name) => {\n      const cmdConfig = config[name];\n      const inst = instruments[name];\n      cmds[\"@\" + name] = fromScope(inst, cmdConfig);\n      cmds[\"@\" + name + \"-note\"] = fromStack(inst, cmdConfig);\n      return cmds;\n    },\n    {}\n  );\n}\n\n// Create an instrument command that get the parameters from context\n// example: `['@pluck']`\nfunction fromScope(inst, [name1, name2, trigger]) {\n  return ({ context }) => trigger(inst, context.get(name1), context.get(name2));\n}\n\n// Create an instrument command that get the parameters from the stack\n// example: `[0.2, 05, '@pluck-note']`\nfunction fromStack(inst, [name1, name2, trigger]) {\n  return ({ stack }) =>\n    trigger(inst, stack.pop(), name2 ? stack.pop() : undefined);\n}\n","// # Builders\n\n// Create a new named sequence\nexport const def = (name, patt) => [name, \"@spawn\", patt];\n\n// Set a value into the context\nexport const set = (name, value) => [value, name, \"@set\"];\n\n// Set a value into the local the context\nexport const lset = (name, value) => [value, name, \"@let\"];\n\n// Wait for an amount of time\nexport const wait = t => [t, \"@wait\"];\n\n// Stop the named sequence\nexport const stop = n => n ? [n, \"@stop\"] : [\"@stop-all\"];\n\n// Loop a pattern a number of times\nexport const loop = (p, n) => n ? [n, \"@repeat\", p] : [\"@loop\", p];\n\n// Print a value/message (and remove it from the stack)\nexport const print = msg => [msg, \"@print\"];\n\n// Log a value (it prints the name and the value, but keeps the value into stack)\nexport const log = name => [name, \"@log\"];\n\n// Reverse an array\nexport const reverse = p => [\"@reverse\", p];\n\n// Schuffle an array\nexport const shuffle = p => [\"@shuffle\", p];\n\n// Rotate an array n times\nexport const rotate = (p, n) => [n !== undefined ? n : 1, \"@rotate\", p];\n\n// Pick a random value from a list\nexport const pick = l => [\"@pick\", l];\n\n// Iterate a list\nexport const iter = l => [\"@iter\", l];\n\n// Conditional\nexport const cond = (f, pt, pf) => [f, \"@cond\", pt, pf];\n\n// Conditional operation based on a random\nexport const chance = (f, pt, pf) => [f, \"@chance\", pt, pf];\n\n// Subtract two values\nexport const sub = (a, b) => [a, b, \"@sub\"];\n\n// Execute arguments\nexport const execute = (l, args) =>\n  args !== undefined ? [l, \"@execute\", args] : [l, \"@execute\"];\n\n// Just a convenience\n// every(3, p) actually creates cond(iter([0,0,1]),p)\n// neat eh?\nexport const every = (n, p) => {\n  const l = [];\n  for (let i = 0; i < n - 1; i++) {\n    l.push(0);\n  }\n  l.push(1);\n  return cond(iter(l), p);\n};\n","// # Audio Virtual Machine\n\n// The main purpose of the virtual machine is to run processes concurrently\n\n// ## Architecture Overview\n\n// A **scheduler** is a collection of processes. Each **process** mantains\n// an internal time value that can be modified.\n\nimport { VM } from \"./vm\";\nimport { all } from \"./commands\";\nimport { gibberish } from \"./gibberish\";\nimport * as builders from \"./builders\";\n\n// ## API\n\nexport function init(Gibberish, ...plugins) {\n  plugins = [{ commands: all }].concat(plugins);\n  // Create the virtual machine\n  const vm = new VM(plugins);\n  // Init the audio driver\n  gibberish(Gibberish, vm);\n  // Return vm's run function\n  return (prog, sync = true) => {\n    vm.run(sync ? ['@sync', prog] : prog)\n  }\n}\n\nexport function live() {\n  const fns = Object.keys(builders);\n  fns.forEach(fn => {\n    window[fn] = builders[fn];\n  });\n  console.log('LIVE!', fns)\n}\n"],"names":["isArray","Array","isString","o","peek","stack","length","expandAliases","Object","keys","commands","reduce","cmd","op","core","push","error","instr","pop","context","let","set","get","proc","wait","Math","abs","Number","floor","time","stop","name","stopAll","fork","instructions","pattern","ERR_BAD_PATTERN","ERR_NAME","repetition","repetitions","Error","i","lists","first","splice","rnd","random","n","prob","op1","fn","op2","wrap","a","b","arithmetic","logic","test","success","debug","log","last","id","all","assign","isCommand","isProgram","procId","Process","program","rate","Context","actions","undefined","instruction","operation","Infinity","limit","step","parent","local","target","value","Scheduler","procs","procsByName","bind","delay","dur","at","resume","remove","p","len","defaultActions","console","VM","plugins","scheduler","initialContext","amp","freq","usePlugin","forEach","plugin","duration","bpm","sampleRate","bpm2bpa","vms","instruments","gibberish","Gibberish","vm","arguments","init","createInstruments","instConfig","createCommands","cmdConfig","sequencers","sequencer","tick","decay","snappy","maxVoices","G","config","insts","type","params","connect","tr1","inst","note","tr2","trBass","bass","trPluck","strings","damping","cmds","fromScope","fromStack","name1","name2","trigger","def","patt","lset","t","loop","print","msg","reverse","shuffle","rotate","pick","l","iter","cond","f","pt","pf","chance","sub","execute","args","every","concat","prog","sync","run","live","fns","builders"],"mappings":"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"}